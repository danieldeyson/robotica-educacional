{"version":3,"sources":["assets/images/logo.png","configs.js","components/Footer.js","routes/history.js","store/general.js","components/Header.js","components/LeftMenu.js","pages/About.js","service/api.js","sagas/actions.js","pages/Login.js","pages/NewPassword.js","service/ibgeApi.js","components/LeftMenu1.js","pages/Edit.js","pages/NewPlan.js","components/Planos.js","components/Atividade.js","pages/Search.js","pages/Register.js","routes/index.js","sagas/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","maxWidth","Typography","style","marginBottom","variant","align","gutterBottom","alt","maxHeight","src","logo","color","component","Date","getFullYear","historyConfig","basename","configs","history","createBrowserHistory","initialState","loadingAPI","mobileOpen","loading","isloading","type","setMobileOpen","isOpen","Header","dispatch","useDispatch","useSelector","state","general","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","GeneralActions","noWrap","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","LeftMenu","classes","useTheme","Divider","List","name","path","map","text","index","to","key","ListItem","button","ListItemIcon","ListItemText","primary","option","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","About","CssBaseline","api","axios","create","baseURL","Error","errorMessage","Success","successMessage","Login","useState","loguin","setLoguin","senha","setSenha","init","setInit","e","a","get","logado","data","nome","localStorage","setItem","id","escola","SagaActions","message","removeItem","Grid","container","xs","sm","item","onSubmit","label","value","onChange","target","Button","htmlFor","Link","ibge","Edit","iduser","getItem","usuario","setUsuario","setNome","categoria","setCategoria","sexo","setSexo","idade","setIdade","cidade","setCidade","estados","setEstados","selectedCidade","setSelectedCidade","selectedEstado","setSelectedEstado","concat","post","alert","Number","then","response","LeftMenu1","required","placeholder","Select","input","Input","renderValue","Chip","MenuItem","sigla","labelId","NewPlan","console","log","size","Planos","useParams","aula","atividade","setAtividade","programacao","setProgramacao","pecas","setPecas","imagem","texto","tam","length","substring","separador","String","replace","trim","robo","Array","from","Set","inicializer","md","paragraph","disciplina","serie","duracao","conteudo","assunto","recursoDidatico","objetivo","ExpansionPanel","ExpansionPanelDetails","descricao","href","descricaoRobo","piece","quantidade","step","bloco","descript","tarefa","quantidadePecas","descTarefa","referencia","Atividade","comentarios","setComentarios","con","setCon","views","setViews","dataAtualFormatada","dia","getDate","toString","diaF","mes","getMonth","comentario","idUser","planoAula","ExpansionPanelSummary","expandIcon","aria-controls","coment","fontWeight","TextareaAutosize","rowsMin","cols","event","ResponsiveDrawer","push","setIndex","atividades","setAtividades","isAdvanced","setIsAdvanced","isLoading","setIsLoading","statusAtv","setStatusAtv","setTimeout","buscarDados","selectedBusca","shift","conteudos","setConteudos","setSelectedBusca","selectedDisciplines","setSelectedDisciplines","selectedSeries","setSelectedSeries","assuntos","setAssuntos","selectedConteudos","setSelectedConteudos","selectedAssuntos","setSelectedAssuntos","status","useEffect","MyLoader","speed","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","class","onclick","toggleAdvanced","atv","Cadastro","integridadeDados","retorno","indexOf","InputLabel","Routes","router","location","pathname","ReactRouterRoute","Route","exact","Search","NewPassword","Register","showError","showErrorNotify","showSuccess","showSuccessNotify","NotificationManager","error","put","action","success","takeEvery","reducers","combineReducers","window","scrollTo","connectRouter","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","createMuiTheme","palette","main","secondary","light","contrastText","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","Boolean","hostname","match","ReactDOM","render","document","querySelector","setAttribute","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2a11b714.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5478eb2f.png\";","export default {\n    primaryColor: \"#4683ff\",\n    secundaryColor: \"#04d361\",\n    basename: \"/\",\n}","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport logo from '../assets/images/logo.png';\n\nimport '../styles/components/Footer.scss';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-component\">\n      <footer className=\"footer-component\">\n        <Container maxWidth=\"lg\">\n          <Typography\n            style={{ marginBottom: 0 }}\n            variant=\"h6\"\n            align=\"center\"\n            gutterBottom\n          >\n            <img\n              alt=\"Logo\"\n              style={{ maxHeight: '40px' }}\n              src={logo}\n            />\n            <br />\n                        Projeto Robótica Educacional\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n                        © 2019 - {new Date().getFullYear()} Robótica Educacional. Todos os\n                        direitos reservados.\n          </Typography>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","import { createBrowserHistory } from 'history';\n\nimport configs from '../configs';\n\nconst historyConfig = {\n  basename: configs.basename,\n};\nconst history = createBrowserHistory(historyConfig);\nexport default history;\n","const SET_MOBILE_OPEN = 'GENERAL/SET_MOBILE_OPEN';\nconst SET_LOADING = 'GENERAL/SET_LOADING';\nconst FOCUS_SEARCH = 'GENERAL/FOCUS_SEARCH';\nconst PAYMENT_FIELDS = 'GENERAL/PAYMENT_FIELDS';\nconst IS_ADMIN = 'GENERAL/IS_ADMIN';\n\nconst initialState = {\n  loadingAPI: false,\n  mobileOpen: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING: {\n      return { ...state, loadingAPI: action.isloading };\n    }\n    case SET_MOBILE_OPEN: {\n      return { ...state, mobileOpen: action.isOpen };\n    }\n    case '@@router/LOCATION_CHANGE': {\n      window.scrollTo(0, 0);\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const loading = (isloading) => ({\n  type: SET_LOADING,\n  isloading,\n});\n\nexport const setMobileOpen = (isOpen) => ({\n  type: SET_MOBILE_OPEN,\n  isOpen,\n});\n\nexport const changePaymentField = (name, value) => ({\n  type: PAYMENT_FIELDS,\n  payload: { name, value },\n});\n\nexport const focusSearch = (focus) => ({\n  type: FOCUS_SEARCH,\n  focus,\n});\n\nexport const setIsAdmin = (is) => ({\n  type: IS_ADMIN,\n  is,\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport history from '../routes/history';\n\nimport * as GeneralActions from '../store/general';\n\nimport '../styles/components/Header.scss';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const mobileOpen = useSelector((state) => state.general.mobileOpen);\n\n  const handleDrawerToggle = () => {\n    dispatch(GeneralActions.setMobileOpen(!mobileOpen));\n  };\n  return (\n    <div className=\"header-component\">\n      <AppBar position=\"fixed\" className=\"app-bar\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className=\"menu-button\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n                        Robótica Educacional\n          </Typography>\n          <div className=\"section-desktop\">\n           \n            \n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MailIcon from '@material-ui/icons/Mail';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport * as GeneralActions from '../store/general';\n\nimport '../styles/components/LeftMenu.scss';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const mobileOpen = useSelector((state) => state.general.mobileOpen);\n\n  const handleDrawerToggle = () => {\n    dispatch(GeneralActions.setMobileOpen(!mobileOpen));\n  };\n\n  const useOptions = [\n    { name: 'Inicio', path: '/' },\n    \n    { name: 'Sobre', path: '/about' },\n    { name: 'Editar Perfil', path: '/perfil'},\n\n  ];\n\n  const options = [\n  \n    { name: 'Sair', path: '/login'},\n  ];\n\n  const drawer = (\n    <div className=\"left-menu-component\">\n      <div className={classes.toolbar}>\n        <h2 className=\"logo-name\">Robótica Educacional</h2>\n      </div>\n      <Divider />\n      <List>\n        {useOptions.map((text, index) => (\n          <Link to={text.path} key={index}>\n            <ListItem button key={index}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text.name} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {options.map((option, index) => (\n          <Link to={option.path} key={index}>\n            <ListItem button key={index}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={option.name} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nexport default LeftMenu;\n","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport LeftMenu from '../components/LeftMenu';\n\nexport default function About() {\n  return (\n    <div className=\"about-page page\">\n      <CssBaseline />\n      <LeftMenu />\n      <main className=\"page-content\">\n        <h2 className=\"title\">Sobre o SCIENCE</h2>\nEssa ferramenta tem como objetivo de aplicar a matemática com a robótica educacional.\n        <br />\n        <br />\n\n        <br />\n        <br />\n\n        <br />\n        <br />\n\n        <br />\n        <br />\n\n      </main>\n\n    </div>\n  );\n}\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/',\n})\n\nexport default api\n","// General\nexport const SAGA_LOADING = 'general/LOADING';\n\n// Notifications\nexport const SAGA_ERROR = 'notify/ERROR';\nexport const SAGA_SUCCESS = 'notify/SUCCESS';\n\n\n// Notifications\nexport const Error = errorMessage => ({ type: SAGA_ERROR, errorMessage });\nexport const Success = successMessage => ({ type: SAGA_SUCCESS, successMessage });\n\n// General\nexport const setLoading = isloading => ({ type: SAGA_LOADING, isloading });\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nimport { Form } from '@unform/web';\nimport { TextField } from 'unform-material-ui';\nimport api from '../service/api';\n\nimport * as SagaActions from '../sagas/actions';\n\nimport '../styles/pages/Login.scss';\n\nexport default function Login() {\n  const [loguin,setLoguin]=useState('');\n  const [senha,setSenha]=useState('');\n  const dispatch = useDispatch();\n  const [init,setInit]=useState(0);\n\n  if(init===0){\n    localStorage.removeItem(\"iduser\");\n    setInit(1);\n  }\n \n\nasync function logar(e){\n\n  \n  const logado= await api.get(`/loguin?loguin=${loguin}&senha=${senha}`);\n\n  if(logado.data.nome !=null){\n\n    \n   \n    localStorage.setItem('iduser',logado.data.id);\n    localStorage.setItem('categoria',logado.data.escola);\n    dispatch(SagaActions.Success({ message: 'Login realizado com sucesso', path: '/' }));\n\n\n    }else{\n      dispatch(SagaActions.Error({ message: 'E-mail ou senha invalidos', path: '/login' }));\n\n    }\n}\n\n\n\n\n  return (\n    <Grid container className=\"login-component\">\n      <Grid className=\"empty-container\" xs={12} sm={4} item />\n      <Grid className=\"form-container\" xs={12} sm={4} item>\n        <Typography className=\"login-font\" variant=\"h2\" component=\"h2\">Bem vindo ao SCIENCE </Typography>\n        <Typography className=\"login-font-secundary\" variant=\"h3\" component=\"h3\">Venha conheçe nosso Sistema</Typography>\n        <Typography className=\"login-font-secundary\" variant=\"h3\" component=\"h3\">Login</Typography>\n        <Form  onSubmit={logar}\n\n        >\n          <TextField className=\"textfield\" name=\"login\" label=\"Login\" value={loguin}  onChange={(e) => setLoguin(e.target.value)} variant=\"outlined\" />\n          <TextField className=\"textfield\" \n          name='password'\n          type=\"password\"\n           label=\"Senha\" value={senha}  onChange={(e) => setSenha(e.target.value)} variant=\"outlined\" />\n          <Button className=\"submit\" variant=\"contained\" color=\"primary\" type=\"submit\">Entrar</Button>\n          <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Lembrar a Senha</label>\n                    </div>\n          </div>\n\n          \n         \n          <Button className=\"submit\" variant=\"contained\" color=\"primary\"  \n                onClick={() =>(dispatch(SagaActions.Success({ message: 'Cadastrar', path: '/cadastro' })))}> Cadastrar - se</Button>\n          <br />\n      \n          <Link className=\"/newPassword\" variant=\"contained\" type=\"link\">Recuperar Senha </Link>\n        </Form>\n      </Grid>\n      <Grid className=\"empty-container\" xs={12} sm={4} item />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Form } from '@unform/web';\nimport { TextField } from 'unform-material-ui';\n\nimport * as SagaActions from '../sagas/actions';\n\nimport '../styles/pages/Login.scss';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  return (\n    <Grid container className=\"login-component\">\n      <Grid className=\"empty-container\" xs={12} sm={4} item />\n      <Grid className=\"form-container\" xs={12} sm={4} item>\n        <Typography className=\"login-font\" variant=\"h2\" component=\"h2\">Bem vindo ao ROBOMATE</Typography>\n        <Typography className=\"login-font-secundary\" variant=\"h3\" component=\"h3\">Digite seu login para receber sua nova senha</Typography>\n        <Form onSubmit={() => {\n          dispatch(SagaActions.Success({ message: 'Senha recuperada com sucesso', path: '/' }));\n        }}\n        >\n          <TextField className=\"textfield\" name=\"login\" label=\"Login\" variant=\"outlined\" />\n          <Button className=\"submit\" variant=\"contained\" color=\"primary\" type=\"submit\">Recuperar</Button>\n\n        </Form>\n      </Grid>\n      <Grid className=\"empty-container\" xs={12} sm={4} item />\n    </Grid>\n  );\n}\n","import axios from 'axios'\r\n\r\nconst ibge = axios.create({\r\n  baseURL: 'https://servicodados.ibge.gov.br/api/v1/localidades/',\r\n})\r\n\r\nexport default ibge;\r\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MailIcon from '@material-ui/icons/Mail';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport * as GeneralActions from '../store/general';\n\nimport '../styles/components/LeftMenu.scss';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LeftMenu = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const mobileOpen = useSelector((state) => state.general.mobileOpen);\n\n  const handleDrawerToggle = () => {\n    dispatch(GeneralActions.setMobileOpen(!mobileOpen));\n  };\n\n\n\n  const drawer = (\n    <div className=\"left-menu-component\">\n      <div className={classes.toolbar}>\n        <h2 className=\"logo-name\">Robótica Educacional</h2>\n      </div>\n      <Divider />\n      \n      <Divider />\n      \n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nexport default LeftMenu;\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Form } from '@unform/web';\nimport React, {useState} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { useDispatch } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport { TextField } from 'unform-material-ui';\nimport * as SagaActions from '../sagas/actions';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport '../styles/pages/Login.scss';\nimport api from '../service/api';\nimport ibge from '../service/ibgeApi';\nimport LeftMenu1 from '../components/LeftMenu1';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport '../styles/pages/NewPlan.scss';\n\nexport default function Edit() {\n\n\n  const iduser= localStorage.getItem(\"iduser\");\n  const [usuario,setUsuario]=useState({});\n  const [init, setInit]=useState(1);\n  const [nome,setNome]=useState(usuario.nome);\n  const [senha,setSenha]=useState(usuario.senha);\n  const [loguin,setLoguin]=useState(usuario.usuario);\n  const [categoria,setCategoria]=useState(usuario.escola);\n  const [sexo,setSexo]=useState(usuario.sexo);\n\n  const [idade,setIdade]=useState(usuario.idade);\n  const [cidade,setCidade]=useState([]);\n  const [estados,setEstados]=useState([]);\n  const [selectedCidade,setSelectedCidade]=useState('');\n  const [selectedEstado,setSelectedEstado]=useState('');\n  const dispatch = useDispatch();\n  \nif(init===1){\n  api.get(`/usuario/id?iduser=${Number(iduser)}`)\n      .then((response) => {\n        setUsuario(response.data)\n      })\n      ibge.get('/estados').then((response)=>{\n        setEstados(response.data);\n      })\n      setInit(0);\n    }\n\n    async function handleEdit(e) {\n       // e.preventDefault()\n\n\n\n\n\n       const data={\n         id:localStorage.getItem('iduser'),\n        nome: nome,\n        usuario: loguin,\n        idade: idade,\n        cidade: selectedCidade.concat(\"/\".concat(selectedEstado)),\n        escola: categoria,\n        sexo: sexo,\n        senha: senha\n    }\n    \n        try {\n          const response = await api.post('/editar', data)\n    \n          setInit(1);\n\n          dispatch(SagaActions.Success({ message: 'editado com sucesso', path: '/' }));\n\n    \n          \n        } catch (err) {\n          alert('Erro, tente novamente.')\n        }\n      }\n    \n    \n\n\n\n  return (\n    <div className=\"new-plan-page page\">\n    <LeftMenu1 />\n    <CssBaseline />\n    <main className=\"page-content\">\n        <h2 className=\"title\">Editar Perfil do Professor no SCIENCE</h2>\n\n    <Grid container className=\"login-component\">\n      <Grid className=\"empty-container\" xs={12} sm={14} item />\n      <Grid className=\"form-container\" xs={12} sm={14} item>\n        \n        <Form onSubmit={handleEdit} >\n       \n       <TextField className=\"textfield\" required name=\"nome\"  placeholder= {usuario.nome} value={nome}  onChange={(e) => setNome(e.target.value)} variant=\"outlined\" />\n       <TextField className=\"textfield\" required  name=\"email\"  placeholder= {usuario.usuario} value={loguin}  onChange={(e) => setLoguin(e.target.value)} variant=\"outlined\" />\n     \n       <div className=\"advanced-section-name\"> Estado: </div>\n       <Select required\n                        variant=\"outlined\"\n                      className=\"select-chips\"\n                      value={selectedEstado}  \n                      input={<Input  />}\n                     label=\"Estado\"\n                     onChange={(e) =>{\n                       setSelectedEstado(e.target.value);\n                       ibge.get(`estados/${e.target.value}/municipios`).then((response)=>{\n                         setCidade(response.data)\n                       }) }} \n                     renderValue={(value) => (\n                       <div>\n                      <Chip key={value} label={value} />\n             \n                       </div>\n                          )}\n      > {estados.map((name) => (\n         <MenuItem key={name.id} value={name.sigla}>\n           {name.nome}\n         </MenuItem>\n       ))}\n\n             </Select> \n             <div className=\"advanced-section-name\"> Cidade: </div>\n       <Select required\n        variant=\"outlined\"\n        input={<Input  />}\n                      className=\"select-chips\"\n                      value={selectedCidade}  \n                  \n                     onChange={(e) =>{\n                       setSelectedCidade(e.target.value);\n                      }} \n                     renderValue={(value) => (\n                       <div>\n                      <Chip key={value} label={value} />\n             \n                       </div>\n                          )}\n      > {cidade.map((name) => (\n         <MenuItem key={name.id} value={name.nome}>\n           {name.nome}\n         </MenuItem>\n       ))}\n\n             </Select> \n     \n     \n             <div className=\"advanced-section-name\"> Sexo: </div>\n       <Select required\n            placeholder= {usuario.sexo}\n                    variant=\"outlined\"\n                     labelId=\"demo-simple-select-label\"\n                     id=\"demo-simple-select\"\n                     value={sexo}\n                     label=\"Sexo\"\n                     onChange={(e) =>setSexo(e.target.value)}\n         >\n                     <MenuItem value={'Masculino'}>Masculino</MenuItem>\n                     <MenuItem value={'Feminino'}>Feminino</MenuItem>\n                     <MenuItem value={'Indeterminado'}>Indefinida</MenuItem>\n             </Select> \n             <div className=\"advanced-section-name\"> Categoria Escolar: </div>\n       <Select required\n        variant=\"outlined\"\n                     labelId=\"demo-simple-select-label\"\n                     id=\"demo-simple-select\"\n                     value={categoria}\n                     label=\"Categoria\"\n                     onChange={(e) => setCategoria(e.target.value)}\n         >\n                     <MenuItem value={'Municipal'}>Municipal</MenuItem>\n                     <MenuItem value={'Estadual'}>Estadual</MenuItem>\n                     <MenuItem value={'Particular'}>Particular</MenuItem>\n             </Select> \n           \n       <TextField className=\"textfield\" required placeholder= {usuario.idade} name=\"idade\"  value={idade}  onChange={(e) => setIdade(e.target.value)} variant=\"outlined\" />\n       <TextField className=\"textfield\" required name=\"senha\" placeholder= {usuario.senha} type='password' value={senha}  onChange={(e) => setSenha(e.target.value)} variant=\"outlined\" />\n       \n       <Button className=\"submit\" variant=\"contained\" color=\"primary\"  type=\"submit\">Enviar</Button>\n\n     </Form>\n      </Grid>\n      <Grid className=\"empty-container\" xs={12} sm={4} item />\n    </Grid>\n    </main>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Form } from '@unform/web';\nimport { TextField } from 'unform-material-ui';\n\nimport LeftMenu from '../components/LeftMenu';\nimport * as SagaActions from '../sagas/actions';\n\nimport '../styles/pages/NewPlan.scss';\n\nexport default function NewPlan() {\n  const dispatch = useDispatch();\n\n  function handleSubmit(e) {\n    dispatch(SagaActions.Success('Criado com sucesso, veja o log com os dados'));\n    console.log(e);\n  }\n\n\n  return (\n    <div className=\"new-plan-page page\">\n      <CssBaseline />\n      <LeftMenu />\n      <main className=\"page-content\">\n        <Form onSubmit={handleSubmit}>\n          <h2>Criação de plano de aula</h2>\n          <TextField size=\"small\" className=\"textfield\" name=\"componentes\" label=\"Componentes curriculares\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"objetivos\" label=\"Objetivos\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"serie\" label=\"Série\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"duracao\" label=\"Duração\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"assunto\" label=\"Assunto\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"conteudo\" label=\"Conteúdo\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"atividade\" label=\"Atividade\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"robos\" label=\"Robos\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"programacao\" label=\"Programação\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"recursos\" label=\"Recursos didáticos\" variant=\"outlined\" />\n          <TextField size=\"small\" className=\"textfield\" name=\"referencias\" label=\"Referências\" variant=\"outlined\" />\n\n          <Button\n            className=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n        Cadastrar o Plano\n          </Button>\n        </Form>\n      </main>\n    </div>\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React, {useState} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// import ThumbDown from '@material-ui/icons/ThumbDown';\n// import ThumbUp from '@material-ui/icons/ThumbUp';\n// import { TextField } from 'unform-material-ui';\n\nimport LeftMenu from '../components/LeftMenu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport '../styles/pages/Search.scss';\nimport api from '../service/api';\n\n\n\nexport default function Planos() {\n    let { id } = useParams();\n    const aulaNome=localStorage.getItem(\"aula\")\n    const aula={nome:aulaNome};\n    const [atividade,setAtividade]=useState({}); \n    const [programacao, setProgramacao]=useState([]);\n    const [pecas, setPecas]=useState([]);\n    const [init,setInit]=useState(0);\n\n\n    function imagem(texto){\n        var tam=texto.length-7;\n        return texto.substring(tam);\n\n    }\n\n    function separador(texto){\n\n        return String(texto).replace(/[A-Z]/g, \" $&\").trim();\n    }\n\n    inicializer();\nasync function inicializer(){\n\n\n    if(init===0){\n\n   await api.post(\"/aula\",aula).then((response)=>{\n\n        setAtividade(response.data);\n   \n        api.get(`/programacao?atividade=${atividade.atividade}`)\n            .then((response) => {\n              setProgramacao(response.data)\n            })\n        \n       if(atividade.robo){\n        api\n        .get(`/robos`)\n        .then((response) => {\n          setPecas(Array.from(new Set(response.data)))\n        })\n\n       } \n       \n         })\n         setInit(1);     \n        }\n    }\n    \n    return (\n\n        <div className=\"about-page page\">\n        <CssBaseline />\n        <LeftMenu />\n        <main className=\"page-content\">\n        <div>\n        <Grid className=\"search-result\" item>\n                <div className=\"primary-info\">\n                <h2 className=\"title\">{separador(atividade.nome)}</h2>\n                    <Grid container>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Componentes curriculares:</strong>\n                                <br /> {atividade.disciplina}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Série:</strong>\n                                <br /> {atividade.serie}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Duração:</strong>\n                                <br /> {atividade.duracao}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Conteúdo:</strong>\n                                <br /> {separador(atividade.conteudo)}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography style={{ marginBottom: 0 }} paragraph>\n                        <strong>Assunto:</strong> {separador(atividade.assunto)}\n                        .\n                        <br />\n                        <strong>Recursos didáticos:</strong>{' '}\n                        {atividade.recursoDidatico}\n                        .\n                        <br />\n                        <strong>Objetivos: </strong>\n                        {' '}\n                        {atividade.objetivo}\n                        \n\n                        <br />\n                    </Typography>\n                  </div>\n                <ExpansionPanel className=\"details\">\n           \n                    <ExpansionPanelDetails>\n                        <div className=\"details-content\">\n                            <Typography>\n                                <strong>Atividade:</strong>{' '}\n                                {separador(atividade.atividade)}\n                                <br />\n                                <strong>Descrição:</strong>{' '}\n                                {atividade.descricao}\n                                <br />\n                            </Typography>\n\n                            <div className=\"robos\">\n                                <strong>Robôs:</strong>\n                                    <div className=\"robot-details\">\n                                        {separador(atividade.robo)}\n                                        <br />\n                                        <strong>Manual de Montagem:</strong>\n                                     <h4> <a href={String(atividade.descricaoRobo).substring(68)} target=\"_blank\" >{String(atividade.descricaoRobo).substring(68)} </a></h4>\n                                        <br/>\n                                        <strong>Peças</strong>\n                                        <ul className=\"robot-pieces\">\n                                            {pecas.map((piece) => (\n                                                <li className=\"piece\">\n                                                    <img\n                                                        alt={`${piece.name} imagem`}\n                                                        className=\"piece-image\"\n                                                        src={`https://imgur.com/${imagem(piece.descricao)}.jpg`}\n                                                    />\n                                                    <div className=\"piece-description\">\n                                                        {`${piece.quantidade}x`}{' '}\n                                                        {`${piece.pecas} `}\n                                                        <br />\n                                                        {piece.descricao}\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                             \n                            </div>\n\n                            <div className=\"steps\">\n                                <strong>Programação:</strong>\n                                {programacao.map((step) => (\n                                    <div className=\"step-details\">\n                                        <img\n                                            alt={`${step.bloco} imagem`}\n                                            className=\"piece-image\"\n                                            src={`https://imgur.com/${imagem(step.descript)}.jpg`}\n                                        />\n                                        <div className=\"step-name\">\n                                           \n                                            <strong>Tarefa: </strong>\n                                            {separador(step.tarefa)}\n                                            <br />\n                                            <strong>Quantidade: </strong>\n                                            {step.quantidadePecas}\n                                            <br />\n                                            <strong>Descrição Tarefa: </strong>\n                                            {step.descTarefa}\n                                            <br/>\n                                            <strong>Nome do Bloco: </strong>\n                                            {separador(step.bloco)}\n                                            <br />\n                                            <strong>Descrição do Bloco: </strong>\n                                            {step.descript}\n                                            <br/>\n                                           \n                                            \n                                        \n                                        </div>\n                                       \n                                    </div>\n                                ))}\n                            </div>\n\n                            <Typography>\n                                <strong>Referência:</strong>{' '}\n                                {atividade.referencia}\n                            </Typography>\n                        </div>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                \n            </Grid>\n            <Grid>\n            \n            <div className=\"steps\">\n\n\n           \n            \n            \n            </div>\n            \n            </Grid>\n        </div>\n        \n            <Divider />\n\n\n        </main>\n         </div>\n\n        \n    );\n}\n","/* eslint-disable react/prop-types */\nimport React, {useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// import ThumbDown from '@material-ui/icons/ThumbDown';\n// import ThumbUp from '@material-ui/icons/ThumbUp';\nimport Visibility from '@material-ui/icons/Visibility';\n\n// import { TextField } from 'unform-material-ui';\nimport api from '../service/api';\nimport history from '../routes/history';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import ThumbDown from '@material-ui/icons/ThumbDown';\n// import ThumbUp from '@material-ui/icons/ThumbUp';\nimport Planos from '../components/Planos'\n\nimport { Form } from '@unform/web';\n// import { TextField } from 'unform-material-ui';\n\nimport * as SagaActions from '../sagas/actions';\nimport { TextareaAutosize } from '@material-ui/core';\n\nexport default function Atividade({ atividade }) {\n\n\n    const dispatch = useDispatch();\n \n    const [comentarios, setComentarios]=useState([]);\n    const [con, setCon]=useState('');\n    const [views, setViews]=useState('');\n    const [init, setInit]=useState(1);\n    const iduser= localStorage.getItem('iduser');\n    const comentando = (event) => {\n        setCon(event.target.value);\n    }\n    const aula={nome:atividade.nome}\n   \n   inicializer();\n   \n   function separador(texto){\n\n    return texto.replace(/[A-Z]/g, \" $&\").trim();\n}\n   \n   async function inicializer(){\n    if (init===1){\n         api\n              .post(`/comentarios`,aula)\n              .then((response) => {\n                setComentarios(response.data)\n              })\n      \n         api\n               .post('/visualizacoes',aula)\n               .then((response) => {\n                 setViews(response.data)\n               })  \n      \n               \n               \n       \n           \n     setInit(0);\n            }\n    }      \n          \n\n    \n    function dataAtualFormatada() {\n        var data = new Date(),\n            dia = data.getDate().toString(),\n            diaF = (dia.length === 1) ? '0' + dia : dia,\n            mes = (data.getMonth() + 1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n            mesF = (mes.length === 1) ? '0' + mes : mes,\n            anoF = data.getFullYear();\n        return   diaF + \"-\" + mesF+ \"-\"+ anoF;\n    }\nasync function visualizar(){\n    localStorage.removeItem(\"aula\");\n    localStorage.setItem(\"aula\",aula.nome)\n    console.log(aula.nome);\n    await api\n    .post(`/visualizacao?iduser=${iduser}`,aula)\n    .then((response) => {\n      setViews(response.data)\n    })\n\n\n\n}\n    \n    async function handleSubmit(e) {\n        // e.preventDefault()\n        const comentario={\n         conteudo: con,\n         idUser: Number(iduser),\n        planoAula:atividade.nome,\n         data:dataAtualFormatada()\n        }\n     \n         try {\n           await api.post('/comentario', comentario)\n        \n          \n            \n           dispatch(SagaActions.Success({ message: 'Comentario enviado', path: '/' }));\n           setInit(1);\n            \n           \n         } catch (err) {\n           alert('Erro,, tente novamente.')\n         }\n       }\n\n    return (\n        <div>\n            <Grid className=\"search-result\" item>\n                <div className=\"primary-info\">\n                    <h2> <Link to={`/plano/${views}`} onClick={visualizar} >{separador(atividade.nome)} </Link></h2>\n                    <Grid container>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Componentes curriculares:</strong>\n                                <br /> {atividade.disciplina}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Série:</strong>\n                                <br /> {atividade.serie}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Duração:</strong>\n                                <br /> {atividade.duracao}\n                            </Typography>\n                        </Grid>\n                        <Grid sm={6} md={3} item>\n                            <Typography paragraph>\n                                <strong>Conteúdo:</strong>\n                                <br /> {separador(atividade.conteudo)}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography style={{ marginBottom: 0 }} paragraph>\n                        <strong>Assunto:</strong> {separador(atividade.assunto)}\n                        .\n                        <br />\n                        <strong>Recursos didáticos:</strong>{' '}\n                        {atividade.recursoDidatico}\n                        .\n                        <br />\n                        <strong>Objetivos: </strong>\n                        {' '}\n                        {atividade.objetivo}\n\n\n                        <br />\n                        </Typography>\n                  </div>\n                <ExpansionPanel className=\"details\">\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel2a-content\"\n                        id=\"panel2a-header\"\n                    />\n                    <ExpansionPanelDetails>\n                      \n                            <div className=\"primary-info\">\n                                <strong>Comentários:</strong>\n                                            {comentarios.map((coment) =>(\n                                                \n                                               Number(coment.idUser)===Number(iduser)?<div>\n                                                   <br/>\n                                                    <button  onClick={() => {\n                                                        api.post(`/comentarios/delete?ID=${coment.id}`)\n                                                        setInit(1);\n                                                        dispatch(SagaActions.Success({ message: 'Comentario apagado', path: '/' }));\n                                                         }\n                                                         }  >  \n                                                     excluir</button> <h5>{coment.usuario}  {coment.data} </h5><h4> {coment.conteudo}</h4> <Divider /></div>:(\n                                            \n                                            \n                                            <div className=\"step-details\">\n                                      \n                                        <div >\n                                            <h5>{coment.usuario}  {coment.data} </h5><h4> {coment.conteudo}</h4>\n                                            \n                                           \n                                            <br />\n                                            <Divider />\n                                        </div>\n                                    </div>\n\n\n\n                                            )))}\n                            </div>\n\n                           \n                        \n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <div className=\"result-footer\">\n                    <div className=\"result-footer-item views\">\n                        <Visibility className=\"icon\" />\n                        <div style={{ fontWeight: 500 }} className=\"quantity\">\n                            {views}\n                        </div>\n                    </div>\n                </div>\n            </Grid>\n            <Grid>\n            \n            <div className=\"steps\">\n           \n            <Form\n                \n                onSubmit={handleSubmit}\n            >\n                <TextareaAutosize\n                    rowsMin=\"10\"\n                    cols=\"135\"\n                    name=\"senha\"\n                    label=\"Senha\"\n                    variant=\"outlined\"\n                    onChange={comentando}\n                />\n                <Button\n                    className=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                >\n                    Comentar\n                </Button>\n            </Form>\n            \n            </div>\n            \n            </Grid>\n            <Divider />\n        </div>\n    );\n}","/* eslint-disable react/jsx-one-expression-per-line */\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Form } from '@unform/web';\nimport React, { useEffect, useState } from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { TextField } from 'unform-material-ui';\nimport Atividade from '../components/Atividade';\nimport LeftMenu from '../components/LeftMenu';\nimport api from '../service/api';\nimport history from '../routes/history';\nimport '../styles/pages/Search.scss';\n\n\n\n\nfunction ResponsiveDrawer() {\n  if(localStorage.getItem(\"iduser\")===null){\n    history.push(\"/login\");\n  }\n\n  const [index, setIndex] = useState(1);\n  const [atividades, setAtividades] = useState([]);\n  const [isAdvanced, setIsAdvanced] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [statusAtv, setStatusAtv] = useState('inicial');\n  const categoria= localStorage.getItem('categoria');\n \n  \n async function toggleAdvanced() {\n setAtividades([]);\n    setIsAdvanced(!isAdvanced);\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n\n\n    }, 2000);\n  }\n\n  async function buscarDados() {\n\n    await api.get(`/busca?busca=${selectedBusca.replace(/ /g,\"\")}&index=${index}`).then((response)=>{\n    \n  \n      if(response.data[0]===null){\n        response.data.shift()\n              alert(\"Não encontramos atividades nesse conteúdo, mas veja esses?\")\n  \n}\nsetAtividades(response.data)\n    \n    });\n     \n      setStatusAtv('busca');\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n\n  }\n\n\n\n  function separador(texto){\n\n    return texto.replace(/[A-Z]/g, \" $&\").trim();\n}\n  \n  const [conteudos, setConteudos] = useState([]);\n  const [selectedBusca, setSelectedBusca] = useState('');\n  const hcbusca = (event) => setSelectedBusca(event.target.value);\n\n  const disciplines = ['Matemática'];\n  const [selectedDisciplines, setSelectedDisciplines] = useState('');\n  const hcDiscs = (event) => setSelectedDisciplines(event.target.value);\n\n  const series = ['6º ano', '7º ano', '8º ano',\"9º ano\"];\n  const [selectedSeries, setSelectedSeries] = useState();\n  const hcSeries = (event) =>{\n     setSelectedSeries(event.target.value);\n       api.get(`/assuntos?serie=${event.target.value}`)\n  .then((response) => {\n    setAssuntos(response.data)\n  });\n}\n  \n  const [assuntos, setAssuntos] = useState([]);\n  const [selectedConteudos, setSelectedConteudos] = useState();\n  const hcConts = (event) =>{ setSelectedConteudos(event.target.value);\n                     \n    api.get(`/buscaAvancada?serie=${selectedSeries}&assunto=${selectedAssuntos}&conteudo=${event.target.value}&index=1`).then((response)=>{\n      setAtividades(response.data)});\n      setStatusAtv('avancado');\n            }\n  const [selectedAssuntos, setSelectedAssuntos] = useState();\n  const hcAssunts = (event) => {\n    setSelectedAssuntos(event.target.value)\n    api.get(`/conteudos?serie=${selectedSeries}&assunto=${event.target.value}`).then((response)=>{\n      setConteudos(response.data)});\n    \n      \n                };\n\n useEffect (()=>{\n  if (!atividades.length && isAdvanced===false){\n    \n     api\n      .get(`/query?categoria=${categoria}&index=${index}`)\n      .then((response) => {\n        setAtividades(response.data)\n      })\n     \n  }\n });\n    \n  function status(){\n\n    if(statusAtv==='busca'){\n      buscarDados();\n    }\n    if(statusAtv==='inicial'){\n      setAtividades([]);\n    }\n    if(statusAtv==='avancado'){\n      api.get(`/buscaAvancada?serie=${selectedSeries}&assunto=${selectedAssuntos}&conteudo=${selectedConteudos}&index=${index}`).then((response)=>{\n        setAtividades(response.data)});\n              }\n    }\n\n\n\n  \n\n\n\n  const MyLoader = () => (\n    \n    <ContentLoader\n      speed={2}\n      width={900}\n      height={250}\n      viewBox=\"0 0 900 250\"\n      backgroundColor=\"#f3f3f3\"\n      foregroundColor=\"#ecebeb\"\n    >\n      <rect x=\"0\" y=\"17\" rx=\"3\" ry=\"3\" width=\"881\" height=\"31\" />\n      <rect x=\"199\" y=\"75\" rx=\"3\" ry=\"3\" width=\"92\" height=\"22\" />\n      <rect x=\"8\" y=\"76\" rx=\"3\" ry=\"3\" width=\"123\" height=\"21\" />\n      <rect x=\"13\" y=\"261\" rx=\"3\" ry=\"3\" width=\"37\" height=\"22\" />\n      <rect x=\"13\" y=\"115\" rx=\"3\" ry=\"3\" width=\"140\" height=\"11\" />\n      <rect x=\"168\" y=\"115\" rx=\"3\" ry=\"3\" width=\"173\" height=\"11\" />\n      <rect x=\"3\" y=\"216\" rx=\"0\" ry=\"0\" width=\"41\" height=\"21\" />\n      <rect x=\"59\" y=\"216\" rx=\"0\" ry=\"0\" width=\"43\" height=\"21\" />\n      <rect x=\"121\" y=\"217\" rx=\"0\" ry=\"0\" width=\"41\" height=\"22\" />\n      <rect x=\"10\" y=\"141\" rx=\"0\" ry=\"0\" width=\"328\" height=\"13\" />\n      <rect x=\"380\" y=\"76\" rx=\"0\" ry=\"0\" width=\"144\" height=\"22\" />\n      <rect x=\"652\" y=\"76\" rx=\"0\" ry=\"0\" width=\"227\" height=\"23\" />\n    </ContentLoader>\n  );\n\n  return (\n    <div className=\"search-page\">\n      <CssBaseline />\n      <LeftMenu />\n      <main className=\"page-content\">\n        <Form onSubmit={() => {\n          buscarDados();\n        }}\n        >\n          <Grid container className=\"simple-search\">\n            <Grid item className=\"search-field\" xs={12} sm={8}>\n              <TextField\n                size=\"small\"\n                className=\"textfield\"\n                name=\"search\"\n                value= {selectedBusca}\n                onChange={hcbusca}\n                label=\"Sua busca\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item className=\"search-field\" xs={12} sm={4}>\n              <Grid container style={{ width: '100%' }}>\n                <Grid item class=\"search-search\" xs={8} sm={8}>\n                  <Button\n                    className=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onclick={buscarDados}\n                  >\n                    Buscar\n                  </Button>\n                </Grid>\n                <Grid item class=\"search-advanced\" xs={4} sm={4}>\n                  <Button\n                    className=\"submit\"\n                    variant=\"contained\"\n                    color=\"secundary\"\n                    onClick={() => toggleAdvanced()}\n                  >\n                    Avançado\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container>\n            { isAdvanced && (\n              <div className=\"advanced-fields\">\n                <div className=\"disciplines\">\n                  <div className=\"advanced-section-name\"> Disciplinas: </div>\n                  <Select\n                    name=\"discipline\"\n                    label=\"Disciplinas\"\n                    className=\"select-chips\"\n                    value={selectedDisciplines}\n                    onChange={hcDiscs}\n                    input={<Input  />}\n                    renderValue={(value) => (\n                      <div>\n  \n                          <Chip key={value} label={value} />\n                        \n                      </div>\n                    )}\n                  >{disciplines.map((name) => (\n                    <MenuItem key={name} value={name}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                  </Select>\n                </div>\n                <div className=\"disciplines\">\n                  <div className=\"advanced-section-name\"> Série: </div>\n                  <Select\n                   \n                    name=\"discipline\"\n                    label=\"Series\"\n                    className=\"select-chips\"\n                    value={selectedSeries}\n                   \n                    onChange={hcSeries}\n                    \n                    renderValue={(value) => (\n                      <div>\n  \n                          <Chip key={value} label={value} />\n                        \n                      </div>\n                    )}\n                  >{series.map((name) => (\n                    <MenuItem key={name} value={name}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                  </Select>\n                </div>\n                <div className=\"disciplines\">\n                  <div className=\"advanced-section-name\"> Assuntos: </div>\n                  <Select\n                    \n                    name=\"discipline\"\n                    label=\"Assuntos\"\n                    className=\"select-chips\"\n                    value={selectedAssuntos}\n                  \n                    onChange={hcAssunts}\n                  \n                    renderValue={(value) => (\n                      <div>\n  \n                          <Chip key={value} label={separador(value)} />\n                        \n                      </div>\n                    )}\n                  >{assuntos.map((name) => (\n                    <MenuItem key={name} value={name}>\n                      {separador(name)}\n                    </MenuItem>\n                  ))}\n                  </Select>\n                </div>\n                <div className=\"disciplines\">\n                  <div className=\"advanced-section-name\"> Conteudos: </div>\n                  <Select\n                    \n                    name=\"discipline\"\n                    label=\"DContuedos\"\n                    className=\"select-chips\"\n                    value={selectedConteudos}\n                    onChange={hcConts}\n                    input={<Input id=\"select\" />}\n                    renderValue={(value) => (\n                      <div>\n  \n                          <Chip key={value} label={separador(value)} />\n                        \n                      </div>\n                    )}\n                  >{conteudos.map((name) => (\n                    <MenuItem key={name} value={name}>\n                      {separador(name)}\n                    </MenuItem>\n                  ))}\n                  </Select>\n                </div>\n              </div>\n            ) }\n          </Grid>\n        </Form>\n        <Divider />\n        <Grid className=\"results\" container>\n          {!isLoading && (atividades).map((atv)=>(\n           \n            <Atividade atividade={atv} />\n            \n          ))}\n          <div> <Button\n                    className=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={() => {\n\n                    if(index>1){\n                      \n                      setIndex(index-1)\n                      status();\n                    };\n                     \n                    \n                    }}\n                  >\n                    Anterior\n                  </Button>\n                  <Button\n                    className=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={() =>{ \n                      if(atividades.length===10){\n                       setIndex(index+1);\n                    status()\n                   }\n                  }\n                  }\n                  >\n                    Proximo\n                  </Button>\n            </div>\n          {\n              isLoading && (\n              <div className=\"loading-examples\">\n                <div className=\"skeleton\"><MyLoader /></div>\n                <Divider />\n                <div className=\"skeleton\"><MyLoader /></div>\n                <Divider />\n                <div className=\"skeleton\"><MyLoader /></div>\n                <Divider />\n                <div className=\"skeleton\"><MyLoader /></div>\n                <Divider />\n                <div className=\"skeleton\"><MyLoader /></div>\n                <Divider />\n                <div className=\"skeleton\"><MyLoader /></div>\n              </div>\n              )\n          }\n        </Grid>\n      </main>\n    </div>\n  );\n\n    }\n\nexport default ResponsiveDrawer;\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Form } from '@unform/web';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { TextField } from 'unform-material-ui';\r\nimport * as SagaActions from '../sagas/actions';\r\nimport api from '../service/api';\r\nimport '../styles/pages/Login.scss';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport '../styles/pages/NewPlan.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ibge from '../service/ibgeApi';\r\nimport LeftMenu1 from '../components/LeftMenu1';\r\n\r\n\r\nexport default function Cadastro() {\r\n\r\n  const [nome,setNome]=useState('');\r\n  const [senha,setSenha]=useState('');\r\n  const [loguin,setLoguin]=useState('');\r\n  const [categoria,setCategoria]=useState('');\r\n  const [sexo,setSexo]=useState('');\r\n  const [cidade,setCidade]=useState([]);\r\n  const [estados,setEstados]=useState([]);\r\n  const [selectedCidade,setSelectedCidade]=useState('');\r\n  const [selectedEstado,setSelectedEstado]=useState('');\r\n  const [idade,setIdade]=useState('');\r\n  const [init,setInit]=useState(0);\r\n  const dispatch = useDispatch();\r\n\r\nif(init===0){\r\n  ibge.get('/estados').then((response)=>{\r\n    setEstados(response.data);\r\n  })\r\n  setInit(1);\r\n}\r\n\r\n  function integridadeDados(){\r\n    var retorno =false;\r\n\r\n    if(loguin.length<10|| (loguin.indexOf('@')===-1)){\r\n      dispatch(SagaActions.Error({message:'Formato de Email incorreto, tente novamente.',path:'/cadastro'}))\r\n    }else  if(senha.length<6){\r\n      dispatch(SagaActions.Error({message:'Senha muito curta, minimo 6 caracteres, tente novamente.',path:'/cadastro'}))\r\n    }else if(idade<15 ||idade>120){\r\n      dispatch(SagaActions.Error({message:'Idade incorreta, fora de padrões, tente novamente.',path:'/cadastro'}))\r\n    }else{\r\n      retorno =true;\r\n    }\r\n    return retorno;\r\n  }\r\n\r\n\r\n    async function handleRegister(e) {\r\n\r\n\r\n      if(integridadeDados()){\r\n\r\n\r\n\r\n\r\n       // e.preventDefault()\r\n       const data={\r\n        nome: nome,\r\n        usuario: loguin,\r\n        idade: idade,\r\n        cidade: selectedCidade.concat(\"/\".concat(selectedEstado)),\r\n        escola: categoria,\r\n        sexo: sexo,\r\n        senha: senha\r\n    }\r\n    \r\n        try {\r\n          const response = await (await api.post('/cadastro', data))\r\n    \r\n          dispatch(SagaActions.Success({ message: 'Cadastrado com sucesso', path: '/login' }));\r\n    \r\n          \r\n        } catch (err) {\r\n          dispatch(SagaActions.Error({message:'Erro no cadastro, tente novamente.',path:'/cadastro'}))\r\n        }\r\n\r\n      }\r\n      }\r\n    \r\n    \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"new-plan-page page\">\r\n    <LeftMenu1 />\r\n    <CssBaseline />\r\n\r\n    <main className=\"page-content\">\r\n        <h2 className=\"title\">Cadastro do Professor no SCIENCE</h2>\r\n\r\n\r\n    <Grid container className=\"login-component\">\r\n      <Grid className=\"empty-container\" xs={12} sm={14} item />\r\n      <Grid className=\"form-container\" xs={12} sm={14} item >\r\n        <Form onSubmit={handleRegister} >\r\n       \r\n          <TextField className=\"textfield\" required name=\"nome\" label=\"Nome\" value={nome}  onChange={(e) => setNome(e.target.value)} variant=\"outlined\" />\r\n          <TextField className=\"textfield\" required  name=\"email\" label=\"Email\" value={loguin}  onChange={(e) => setLoguin(e.target.value)} variant=\"outlined\" />\r\n        <div className=\"Estados\">\r\n       \r\n        <InputLabel id=\"demo-simple-select-label\">Estado</InputLabel>\r\n\r\n          <Select required\r\n         \r\n                      width=\"200%\"\r\n                           variant=\"outlined\"\r\n                         \r\n                         value={selectedEstado}  \r\n                        label=\"Estado\"\r\n                        onChange={(e) =>{\r\n                          setSelectedEstado(e.target.value);\r\n                          ibge.get(`estados/${e.target.value}/municipios`).then((response)=>{\r\n                            setCidade(response.data)\r\n                          }) }} \r\n                      \r\n         > {estados.map((name) => (\r\n            <MenuItem key={name.id} value={name.sigla}>\r\n              {name.nome}\r\n            </MenuItem>\r\n          ))}\r\n\r\n                </Select> \r\n           \r\n                </div>\r\n                <InputLabel >Cidade</InputLabel>\r\n          <Select required\r\n           variant=\"outlined\"\r\n                         \r\n                         value={selectedCidade}  \r\n                       \r\n                        onChange={(e) =>{\r\n                          setSelectedCidade(e.target.value);\r\n                         }} \r\n                      \r\n         > {cidade.map((name) => (\r\n            <MenuItem key={name.id} value={name.nome}>\r\n              {name.nome}\r\n            </MenuItem>\r\n          ))}\r\n\r\n                </Select> \r\n        \r\n        \r\n          <InputLabel id=\"demo-simple-select-label\">Sexo</InputLabel>\r\n          <Select required\r\n           variant=\"outlined\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={sexo}\r\n                        label=\"Sexo\"\r\n                        onChange={(e) =>setSexo(e.target.value)}\r\n            >\r\n                        <MenuItem value={'Masculino'}>Masculino</MenuItem>\r\n                     <MenuItem value={'Feminino'}>Feminino</MenuItem>\r\n                     <MenuItem value={'Indeterminado'}>Indefinida</MenuItem>\r\n                </Select> \r\n\t\t  <InputLabel id=\"demo-simple-select-label\">Categoria Escolar</InputLabel>\r\n          <Select required\r\n           variant=\"outlined\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={categoria}\r\n                        label=\"Categoria\"\r\n                        onChange={(e) => setCategoria(e.target.value)}\r\n            >\r\n                        <MenuItem value={'Municipal'}>Municipal</MenuItem>\r\n                        <MenuItem value={'Estadual'}>Estadual</MenuItem>\r\n                        <MenuItem value={'Particular'}>Particular</MenuItem>\r\n                </Select> \r\n              \r\n          <TextField className=\"textfield\" required name=\"idade\" label=\"Idade\" value={idade}  onChange={(e) => setIdade(e.target.value)} variant=\"outlined\" />\r\n          <TextField className=\"textfield\" required name=\"senha\" label=\"Senha\" type='password' value={senha}  onChange={(e) => setSenha(e.target.value)} variant=\"outlined\" />\r\n          \r\n          <Button className=\"submit\" variant=\"contained\" color=\"primary\"  type=\"submit\">Enviar</Button>\r\n\r\n        </Form>\r\n      </Grid>\r\n      <Grid className=\"empty-container\" xs={12} sm={1} item />\r\n    </Grid>\r\n    </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport { ConnectedRouter } from 'connected-react-router';\nimport { QueryParamProvider } from 'use-query-params';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport About from '../pages/About';\nimport Login from '../pages/Login';\nimport NewPassword from '../pages/NewPassword';\nimport Edit from '../pages/Edit';\nimport NewPlan from '../pages/NewPlan';\nimport Search from '../pages/Search';\nimport history from './history';\nimport Register from '../pages/Register';\nimport Planos from '../components/Planos'\n\n// Pages\n// Components\n\nconst Routes = () => {\n  const path = useSelector((state) => state.router.location.pathname);\n\n  return (\n    <ConnectedRouter history={history}>\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <Container\n          className={`${path.replace('/', '').concat('-path')} routes-wrapper `}\n          maxWidth=\"lg\"\n        >\n          <Header />\n          <Grid item xs={12} className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Search} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/new\" component={NewPlan} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/password\" component={NewPassword} />\n              <Route exact path=\"/cadastro\" component={Register}/>\n              <Route exact path=\"/perfil\" component={Edit}/>\n              <Route exact path=\"/plano/:id\"  component={Planos}/>\n\n\n            </Switch>\n          </Grid>\n          <Footer />\n\n        </Container>\n      </QueryParamProvider>\n    </ConnectedRouter>\n  );\n};\n\nexport default Routes;\n","/* eslint-disable no-unused-vars */\nimport { NotificationManager } from 'react-notifications';\n\nimport { push } from 'connected-react-router';\nimport { delay } from 'redux-saga';\nimport {\n  takeEvery, put, call, select, all, race,\n} from 'redux-saga/effects';\n\n// Actions\nimport * as GeneralActions from '../store/general';\nimport * as SA from './actions';\n// import * as API from '../services/api';\n\n// Notifications\nfunction* showError(errorMessage) {\n  if (typeof errorMessage === 'string') {\n    yield NotificationManager.error(errorMessage, 'Erro!', 5000, () => {});\n  }\n  if (typeof errorMessage === 'object' && errorMessage.message) {\n    yield NotificationManager.error(\n      errorMessage.message,\n      'Erro!',\n      5000,\n      () => {},\n    );\n  }\n  if (typeof errorMessage === 'object' && errorMessage.path) { yield put(push(errorMessage.path)); }\n}\n\nfunction* showErrorNotify(action) {\n  const { errorMessage } = action;\n  yield showError(errorMessage);\n}\n\nfunction* showSuccess(successMessage) {\n  if (typeof successMessage === 'string') {\n    yield NotificationManager.success(\n      successMessage,\n      'Sucesso!',\n      5000,\n      () => {},\n    );\n  }\n  if (typeof successMessage === 'object' && successMessage.message) {\n    yield NotificationManager.success(\n      successMessage.message,\n      'Sucesso!',\n      5000,\n      () => {},\n    );\n  }\n  if (typeof successMessage === 'object' && successMessage.path) {\n    yield put(push(successMessage.path));\n  }\n}\nfunction* showSuccessNotify(action) {\n  const { successMessage } = action;\n  yield showSuccess(successMessage);\n}\n\n// Loading\nfunction* loading(isloading) {\n  yield put(GeneralActions.loading(isloading));\n}\n\nexport default function* root() {\n  yield takeEvery(SA.SAGA_ERROR, showErrorNotify);\n  yield takeEvery(SA.SAGA_SUCCESS, showSuccessNotify);\n  // GENERAL\n  yield takeEvery(SA.SAGA_LOADING, loading);\n}\n","import { routerMiddleware, connectRouter } from 'connected-react-router';\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport history from '../routes/history';\nimport rootSaga from '../sagas';\n// Reducers\nimport general from './general';\n\nconst reducers = combineReducers({\n  general,\n  router: connectRouter(history),\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [routerMiddleware(history), sagaMiddleware];\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(...middlewares),\n    // other store enhancers if any here\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { NotificationContainer } from 'react-notifications';\nimport { Provider } from 'react-redux';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport configs from './configs';\nimport Routes from './routes/index';\nimport store from './store';\nimport 'react-notifications/lib/notifications.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: configs.primaryColor,\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: configs.secundaryColor,\n      main: configs.secundaryColor,\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#000000',\n    },\n    // error: will use the default color\n  },\n  typography: {\n    fontFamily: 'BlinkMacSystemFont,-apple-system,segoe ui,Roboto,Oxygen,Ubuntu,Cantarell,fira sans,droid sans,helvetica neue,Helvetica,Arial,sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n});\n\nexport default function App() {\n  useEffect(() => {\n    document\n      .querySelector('meta[name=\"theme-color\"]')\n      .setAttribute('content', configs.primaryColor);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"app-wrapper\">\n          <Routes />\n          <NotificationContainer />\n        </div>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}